import pandas as pd
import numpy as np
import tensorflow as tf
import wfdb
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import mean_absolute_error

models = {
    "NN_Alle": (r"C:Keras Modell alle", 
                r"C:Testdatentabelle alle"),
    "NN_M": (r"C:Keras Modell männer", 
                r"C:Testdatentabelle männer"),
    "NN_W": (r"C:Keras Modell frauen", 
                r"C:Testdatentabelle frauen")
}

ekg_path = r"#Pfad zu den EKGs"

def ekg_daten_laden(Ya, path):
    data = [wfdb.rdsamp(path + f)[0] for f in Ya.filename_lr]
    return np.array(data)

results = []

for model_name, (model_path, data_path) in models.items():
    print(f"\nLade Modell: {model_name} ...")
    
    model = tf.keras.models.load_model(model_path)
    
    Ya = pd.read_csv(data_path, index_col='ecg_id')
    n = len(Ya) 
    Ya = Ya.iloc[:n]

    Yami = Ya.iloc[:, 3].values

    X_test = ekg_daten_laden(Ya, ekg_path)

    predictions = model.predict(X_test).flatten()

    mae = mean_absolute_error(Yami, predictions)
    results.append((model_name, mae))



results_df = pd.DataFrame(results, columns=["Modell", "Durchschnittliche (MAE)"])
print("Durchschnittliche Abweichung Modelle:")
print(results_df)

plt.figure(figsize=(12, 5))
sns.barplot(x=results_df["Modell"], y=results_df["Durchschnittliche Abweichung (MAE)"], palette="magma")
plt.ylabel("Durchschnittliche Abweichung (MAE)")
plt.xlabel("Modell")
plt.show()
